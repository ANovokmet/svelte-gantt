import{s as U,o as D,p as Y,e as u,a as g,H as G,c as m,y as H,g as y,b as R,z as q,f as s,r as w,i as o,n as I}from"../chunks/scheduler.lruobs1Y.js";import{S as J,i as K,b as O,d as Q,m as V,a as W,t as X,e as Z}from"../chunks/index.DyGm78TJ.js";import{g as tt,a as B}from"../chunks/spread.CgU5AtxT.js";import{L as et}from"../chunks/layout.zjTtpqzV.js";function at(v){let e,d='Header<a class="header-anchor" aria-hidden="true" href="#header">#</a>',c,p,a="Represents a row of header cells that render over the gantt.",l,r,$='<thead><tr><th>Name</th> <th>Type</th> <th>Description</th> <th align="right">Default</th></tr></thead> <tbody><tr><td><code>unit</code></td> <td><code>string</code></td> <td>Time unit used to display header cells, eg. <code>&#39;day&#39;</code> will create a cell in the header for each day in the timeline.</td> <td align="right"></td></tr> <tr><td><code>format</code></td> <td><code>string</code></td> <td>Datetime format used to label header cells, eg. <code>&#39;DD.MM.YYYY&#39;</code>, <code>&#39;HH&#39;</code></td> <td align="right"></td></tr> <tr><td><code>offset</code></td> <td><code>number</code></td> <td>Duration width of header cell.</td> <td align="right"></td></tr> <tr><td><code>sticky</code></td> <td><code>boolean</code></td> <td>Use sticky positioning for header labels.</td> <td align="right"></td></tr></tbody>',x,i,A='Formatting<a class="header-anchor" aria-hidden="true" href="#formatting">#</a>',b,f,P="By default <code>svelte-gantt</code> is only able to format a small set of date templates, eg. <code>&#39;HH:mm&#39;</code>. For more you can use <code>MomentSvelteGanttDateAdapter</code> as <code>dateAdapter</code>:",M,k,T,z=`<code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> MomentSvelteGanttDateAdapter <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-gantt'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> moment <span class="token keyword">from</span> <span class="token string">'Moment'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">dateAdapter</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">MomentSvelteGanttDateAdapter</span><span class="token punctuation">(</span>moment<span class="token punctuation">)</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span></code>`,L,h,E="â€¦or a custom one, as long as it implements the interface <code>{ format(date: number, format: string): string; }</code>.",j,_,C,N=`<code class="language-js"><span class="token keyword">import</span> dayjs <span class="token keyword">from</span> <span class="token string">'dayjs'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">dateAdapter</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token function">format</span><span class="token punctuation">(</span><span class="token parameter">date<span class="token punctuation">,</span> format</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> <span class="token function">dayjs</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span></code>`;return{c(){e=u("h1"),e.innerHTML=d,c=g(),p=u("p"),p.textContent=a,l=g(),r=u("table"),r.innerHTML=$,x=g(),i=u("h3"),i.innerHTML=A,b=g(),f=u("p"),f.innerHTML=P,M=g(),k=u("pre"),T=new G(!1),L=g(),h=u("p"),h.innerHTML=E,j=g(),_=u("pre"),C=new G(!1),this.h()},l(t){e=m(t,"H1",{id:!0,tabindex:!0,"data-svelte-h":!0}),H(e)!=="svelte-1qag11n"&&(e.innerHTML=d),c=y(t),p=m(t,"P",{"data-svelte-h":!0}),H(p)!=="svelte-1k5mmo7"&&(p.textContent=a),l=y(t),r=m(t,"TABLE",{"data-svelte-h":!0}),H(r)!=="svelte-8jxepk"&&(r.innerHTML=$),x=y(t),i=m(t,"H3",{id:!0,tabindex:!0,"data-svelte-h":!0}),H(i)!=="svelte-1pliyh9"&&(i.innerHTML=A),b=y(t),f=m(t,"P",{"data-svelte-h":!0}),H(f)!=="svelte-fgg87n"&&(f.innerHTML=P),M=y(t),k=m(t,"PRE",{class:!0});var n=R(k);T=q(n,!1),n.forEach(s),L=y(t),h=m(t,"P",{"data-svelte-h":!0}),H(h)!=="svelte-105sdm8"&&(h.innerHTML=E),j=y(t),_=m(t,"PRE",{class:!0});var S=R(_);C=q(S,!1),S.forEach(s),this.h()},h(){w(e,"id","header"),w(e,"tabindex","-1"),w(i,"id","formatting"),w(i,"tabindex","-1"),T.a=null,w(k,"class","language-js"),C.a=null,w(_,"class","language-js")},m(t,n){o(t,e,n),o(t,c,n),o(t,p,n),o(t,l,n),o(t,r,n),o(t,x,n),o(t,i,n),o(t,b,n),o(t,f,n),o(t,M,n),o(t,k,n),T.m(z,k),o(t,L,n),o(t,h,n),o(t,j,n),o(t,_,n),C.m(N,_)},p:I,d(t){t&&(s(e),s(c),s(p),s(l),s(r),s(x),s(i),s(b),s(f),s(M),s(k),s(L),s(h),s(j),s(_))}}}function nt(v){let e,d;const c=[v[0],F];let p={$$slots:{default:[at]},$$scope:{ctx:v}};for(let a=0;a<c.length;a+=1)p=D(p,c[a]);return e=new et({props:p}),{c(){O(e.$$.fragment)},l(a){Q(e.$$.fragment,a)},m(a,l){V(e,a,l),d=!0},p(a,[l]){const r=l&1?tt(c,[l&1&&B(a[0]),l&0&&B(F)]):{};l&2&&(r.$$scope={dirty:l,ctx:a}),e.$set(r)},i(a){d||(W(e.$$.fragment,a),d=!0)},o(a){X(e.$$.fragment,a),d=!1},d(a){Z(e,a)}}}const F={title:"Headers"};function st(v,e,d){return v.$$set=c=>{d(0,e=D(D({},e),Y(c)))},e=Y(e),[e]}class rt extends J{constructor(e){super(),K(this,e,st,nt,U,{})}}export{rt as component};
