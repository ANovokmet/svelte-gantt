import{s as I,e as f,a as _,c as g,b as F,y as w,g as h,f as c,r as b,i as u,h as P,n as N,o as M,p as A,H as W,z as q}from"../chunks/scheduler.lruobs1Y.js";import{S as R,i as U,b as H,d as S,m as L,a as G,t as j,e as E}from"../chunks/index.DyGm78TJ.js";import{g as z,a as Y}from"../chunks/spread.CgU5AtxT.js";import{L as B}from"../chunks/layout.zjTtpqzV.js";import{S as J,t as D,M as K,h as O,a as Q}from"../chunks/index.Up5bhyj0.js";function X(i){let a,s,o="Click and drag on the timeline to create a task.",p,n,l;return n=new J({props:{from:D("06:00"),to:D("14:00"),fitWidth:!0,minWidth:400,dateAdapter:new K(O),rows:[{id:11,label:"Petunia Mulliner"},{id:12,label:"Mélina Giacovetti"},{id:13,label:"Marlène Lasslett"},{id:14,label:"Adda Youell"}],ganttTableModules:[Q],enableCreateTask:i[0].enableCreateTask,onCreateTask:i[0].onCreateTask,onCreatedTask:i[0].onCreatedTask}}),{c(){a=f("div"),s=f("div"),s.textContent=o,p=_(),H(n.$$.fragment),this.h()},l(e){a=g(e,"DIV",{class:!0});var k=F(a);s=g(k,"DIV",{class:!0,"data-svelte-h":!0}),w(s)!=="svelte-12ji1id"&&(s.textContent=o),p=h(k),S(n.$$.fragment,k),k.forEach(c),this.h()},h(){b(s,"class","text-center border-b"),b(a,"class","border")},m(e,k){u(e,a,k),P(a,s),P(a,p),L(n,a,null),l=!0},p:N,i(e){l||(G(n.$$.fragment,e),l=!0)},o(e){j(n.$$.fragment,e),l=!1},d(e){e&&c(a),E(n)}}}function Z(i){let a=0;return[{enableCreateTask:!0,onCreateTask:o=>(a++,{id:a,label:`New task ${a}`,...o}),onCreatedTask:o=>{console.log("task created",o)}}]}class aa extends R{constructor(a){super(),U(this,a,Z,X,I,{})}}function ta(i){let a,s='Create tasks<a class="header-anchor" aria-hidden="true" href="#create-tasks">#</a>',o,p,n="Using the following options, tasks can be created by dragging on the chart:",l,e,k="<li><code>enableCreateTask</code> (<code>boolean</code>) - Set to <code>true</code> to enable task creation.</li> <li><code>onCreateTask</code> (<code>Function</code>) - Triggers at the moment when a new task has started being dragged. It should return the new tasks model.</li> <li><code>onCreatedTask</code> (<code>Function</code>) - Triggers after task has been successfully created.</li>",v,d,$,C,T,m,y,V=`<code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> SvelteGantt<span class="token punctuation">,</span> SvelteGanttTable <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-gantt'</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>
<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

gantt<span class="token punctuation">.</span><span class="token function">$set</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token literal-property property">enableCreateTask</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onCreateTask</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        id<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token punctuation">,</span>
            <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">New task </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">,</span>
            <span class="token operator">...</span>data
        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onCreatedTask</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">task</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'task created'</span><span class="token punctuation">,</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,x;return d=new aa({}),{c(){a=f("h1"),a.innerHTML=s,o=_(),p=f("p"),p.textContent=n,l=_(),e=f("ul"),e.innerHTML=k,v=_(),H(d.$$.fragment),$=_(),C=f("hr"),T=_(),m=f("pre"),y=new W(!1),this.h()},l(t){a=g(t,"H1",{id:!0,tabindex:!0,"data-svelte-h":!0}),w(a)!=="svelte-98k718"&&(a.innerHTML=s),o=h(t),p=g(t,"P",{"data-svelte-h":!0}),w(p)!=="svelte-2i3m6l"&&(p.textContent=n),l=h(t),e=g(t,"UL",{"data-svelte-h":!0}),w(e)!=="svelte-vobacb"&&(e.innerHTML=k),v=h(t),S(d.$$.fragment,t),$=h(t),C=g(t,"HR",{}),T=h(t),m=g(t,"PRE",{class:!0});var r=F(m);y=q(r,!1),r.forEach(c),this.h()},h(){b(a,"id","create-tasks"),b(a,"tabindex","-1"),y.a=null,b(m,"class","language-js")},m(t,r){u(t,a,r),u(t,o,r),u(t,p,r),u(t,l,r),u(t,e,r),u(t,v,r),L(d,t,r),u(t,$,r),u(t,C,r),u(t,T,r),u(t,m,r),y.m(V,m),x=!0},p:N,i(t){x||(G(d.$$.fragment,t),x=!0)},o(t){j(d.$$.fragment,t),x=!1},d(t){t&&(c(a),c(o),c(p),c(l),c(e),c(v),c($),c(C),c(T),c(m)),E(d,t)}}}function na(i){let a,s;const o=[i[0]];let p={$$slots:{default:[ta]},$$scope:{ctx:i}};for(let n=0;n<o.length;n+=1)p=M(p,o[n]);return a=new B({props:p}),{c(){H(a.$$.fragment)},l(n){S(a.$$.fragment,n)},m(n,l){L(a,n,l),s=!0},p(n,[l]){const e=l&1?z(o,[Y(n[0])]):{};l&2&&(e.$$scope={dirty:l,ctx:n}),a.$set(e)},i(n){s||(G(a.$$.fragment,n),s=!0)},o(n){j(a.$$.fragment,n),s=!1},d(n){E(a,n)}}}function ea(i,a,s){return i.$$set=o=>{s(0,a=M(M({},a),A(o)))},a=A(a),[a]}class ca extends R{constructor(a){super(),U(this,a,ea,na,I,{})}}export{ca as component};
