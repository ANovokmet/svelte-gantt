# Gantt

Pass options object as `props` to the SvelteGantt constructor. 

```js
const gantt = new SvelteGantt({ 
    target: document.getElementById('example-gantt'), 
    props: { 
        // ...
    }
});
```


To update use `$set`, eg.

```js
gantt.$set({
    // ...
});
```

| Name | Description | Type | Default |
| - | - | - | -: |
| `rows` | `Array` | Rows to load in the gantt, see below. | undefined |
| `tasks` | `Array` | Tasks that display in the gantt, see below. | undefined |
| `timeRanges` | `Array` | Timeranges that display in the gantt, see below. | undefined |
| `dependencies` | `Array` | Dependencies that display in the gantt, used with the SvelteGanttDependencies module, see below. | undefined |
| `from` | `Moment` | Datetime timeline starts on. | undefined |
| `to` | `Moment` | Datetime timeline ends on. | undefined |
| `minWidth` | `number` | Minimum width of gantt area in px. | undefined |
| `fitWidth` | `boolean` | Should timeline stretch width to fit. | undefined |
| `highlightedDurations` | `Object` | Pattern for [highlighting durations](/docs/options/columns#highlighted-durations). | undefined |
| `highlightColor` | `string` | Highlight color (for use with `highlightedDurations`). | undefined |
| `magnetUnit` | `string` | Minimum unit of time task date values will round to. | 'minute' |
| `magnetOffset` | `number` | Amount of units task date values will round to. | 15 |
| `columnUnit` | `string` | Duration unit of [columns](/docs/options/columns). | 'minute' |
| `columnOffset` | `number` | Duration width of [columns](/docs/options/columns). | 15 |
| `headers` | `Array` | List of headers used for main gantt area. | undefined |
| `dateAdapter` | `Object` | [Date adapter](#dateadapter) | undefined |
| `zoomLevels` | `Array` | List of zoom levels for gantt. Gantt cycles trough these parameters on ctrl+scroll. | undefined |
| `rowHeight` | `number` | Height of a single row in px. | undefined |
| `rowPadding` | `number` | Padding of a single row in px. | undefined |
| `ganttTableModules` | `Array` | Modules used in gantt table area. eg. `[SvelteGanttTable]` | undefined |
| `ganttBodyModules` | `Array` | Modules used in gantt body area. eg. `[SvelteGanttDependencies]` | undefined |
| `reflectOnParentRows` | `boolean` | When task is assigned to a child row display them on parent rows as well, used when rows are disabled as a tree. | undefined |
| `reflectOnChildRows` | `boolean` | When task is assigned to a parent row display them on child rows as well, used when rows are disabled as a tree. | undefined |
| `classes` | `string`\|`Array` | Custom CSS classes to apply to gantt. | undefined |
| `resizeHandleWidth` | `number` | Width of handle for resizing tasks, in px. | undefined |
| `onTaskButtonClick` | `(task: Task) => void` | Callback for task button clicks. | undefined |
| `taskContent` | `(task: Task) => string` | Task content factory function. | undefined |
| `taskElementHook` | `Function` | [Task element hook](/docs/data/tasks#taskelementhook) | undefined |
| `tableWidth` | `number` | Width of table, used with SvelteGanttTable module. | undefined |
| `tableHeaders` | `Array` | Headers of table, used with SvelteGanttTable module. | undefined |
| `columnStrokeColor` | `string` | Color of column lines. eg. `'#efefef'` | undefined |
| `columnStrokeWidth` | `number` | Width of column lines. | undefined |
| `layout` | `'overlap'`, `'pack'`, `'expand'` | The [layout](#layout) used to arrange tasks in a row. | undefined |
| `enableCreateTask` | `boolean` | Enables creating new tasks by dragging. | undefined |
| `onCreateTask` | `({ from: number; to: number; resourceId: string number; }) => TaskModel` | This function provides the new task model when dragging to create task. | undefined |
| `onCreatedTask` | `(task: SvelteTask) => void` | Called after task was created by dragging. | undefined |


### TaskContent

eg.

```js
(task) => `<div>Task ${task.model.label}</div>`
```

### Layout

Layout can be one of the following:


- `'overlap'` Overlapping tasks display one over another (default).
- `'pack'` Overlapping tasks shrink and display one above another.
- `'expand'` Overlapping tasks display one above another and make the row expand.


### DateAdapter

A date adapter is an object of interface `{ format(date: number, format: string): string; }` that formats a date in UNIX miliseconds to a string using the specified format template, eg. 'MMMM Do'.


## Methods

|Name||Type|Description|
| - | - | - | -: |
|`selectTask(id)` ||| Selects task by id.
||`id` | `number`\|`string` | Id of task
|`unselectTasks()` ||| Unselects tasks.
|`scrollToTask(id, scrollBehavior)` |||  Scrolls the view to a task.
||`id` | `number`\|`string` | Id of task
||`scrollBehaviour` | `string` | `auto` or `smooth`.
|`scrollToRow(id, scrollBehavior)`|||  Scrolls the view to a row.
||`id` | `number`\|`string` | Id of row
||`scrollBehaviour` | `string` | `auto` or `smooth`.
|`updateTask(model)`|||  Updates or inserts task.
||`model` | `Task` | Task object
|`updateTasks(models)`|||  Updates or inserts tasks.
||`models` | `Array<Task>` | Task objects
|`updateRow(model)`|||  Updates or inserts row.
||`model` | `Row` | Row object
|`updateRows(models)`|||  Updates or inserts rows.
||`models` | `Array<Row>` | Row objects
|`getTask(id)`|||  Get task by id.
||`id` | `number`|`string` | Id of task
|`getRow(id)`|||  Get row by id.
||`id` | `number`|`string` | Id of row
|`getTasks(rowId)`|||  Get tasks by row id.
||`rowId` | `number`|`string` | Id of row


## Events

Synchronously run callbacks on specific events. Subscribe to these after gantt is created.

```js
gantt.api.tasks.on.select(task => console.log('Listener: task selected', task));
```

### `gantt.api.tasks`

|Name|Data|Description|
| - | - | - |
|`move` | [`task`] | Runs while task is moving.
|`switchRow` | [`task`, `row`, `previousRow`] | Runs when user switches row of task.
|`select` | [`task`] | Runs when user selects task.
| `moveEnd` | [`task`]  | Runs when user stops moving task.
| `change` | [`task`]  | Runs after dropping a task, before it is updated.
|`changed` | [`task`]  | Runs after dropping a task, after it is updated.

## Available modules

-   `SvelteGanttTable` Renders a table on the left side of gantt. Needed for row labels.
-   `SvelteGanttDependencies` Renders dependencies between tasks.
-   `SvelteGanttExternal` Enables external DOM elements to be draggable to svelte-gantt. Useful for creating new tasks:
