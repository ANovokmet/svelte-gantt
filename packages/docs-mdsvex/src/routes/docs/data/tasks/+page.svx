---
title: Tasks
---

# Task

Tasks are intervals of time that are assigned to a resource. They are defined as a list of objects:

| Name | Type | Description | Default |
| - | - | - | -: |
`id` | `number`\|`string` | Id of task, every task needs to have a unique one. | undefined |
`amountDone` | `number` | Task completion in percent, indicated on task. | undefined |
`classes` | `string`\|`Array` | Custom CSS classes to apply to task. | undefined |
`from` | `number` | Datetime task starts on. | undefined |
`to` | `number` | Datetime task ends on. | undefined |
`label` | `string` | Label of task. | undefined |
`html` | `string` | Html content of task, will override label. | undefined |
`showButton` | `boolean` | Show button bar. | undefined |
`buttonClasses` | `string`\|`Array` | Button classes, useful for fontawesome icons. | undefined |
`buttonHtml` | `string` | Html content of button. | undefined |
`enableDragging` | `boolean` | enable dragging of task. | true |
`enableResize` | `boolean` | enable resize of task. | true |



<script>
    import {SvelteGantt, SvelteGanttTable} from 'svelte-gantt/svelte';
    import { defaultOptions, time } from '$lib';
</script>

<section class="my-12">
<SvelteGantt from={time('8:00')} to={time('14:00')}
    minWidth={200}
    fitWidth={true}
    rows={[
        {id: 1, label: 'Row 1'}, 
        {id: 2, label: 'Row 2'}, 
        {id: 3, label: 'Row 3'}, 
        {id: 4, label: 'Row 4'}, 
        {id: 5, label: 'Row 4'}, 
        {id: 6, label: 'Row 4'}, 
    ]}
    tasks={[
        { id: 1, resourceId: 1, from: time('8:30'), to: time('10:00'), label: 'Default' },
        { id: 2, resourceId: 2, from: time('9:00'), to: time('10:30'), label: '25% done', amountDone: 25 },
        { id: 3, resourceId: 3, from: time('9:30'), to: time('11:00'), label: 'Custom class', classes: 'gradient' },
        { id: 4, resourceId: 4, from: time('10:00'), to: time('11:30'), html: '<span class="flex items-center gap-2"><span class="w-4 h-4 bg-blue-800"></span>Html content</span>' },
        { id: 5, resourceId: 5, from: time('10:30'), to: time('12:00'), label: 'Resizable but not draggable', enableDragging: false },
        { id: 6, resourceId: 6, from: time('11:00'), to: time('12:30'), label: 'Draggable but not resizable', enableResize: false }
    ]}
/>
</section>

<style lang="postcss">
    :global(.sg-task.gradient) {
        @apply bg-gradient-to-tr from-pink-500 to-violet-500 rounded-md;
    }
    :global(.sg-task.gradient:hover) {
        @apply bg-gradient-to-tr from-pink-600 to-violet-600 rounded-md shadow-xl;
    }

    :global(.sg-tree-expander .fa-angle-right::before) {
        display: block;
        content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" /></svg>');
        width: 1rem;
        height: 1rem;
    }
    :global(.sg-tree-expander .fa-angle-down::before) {
        display: block;
        content: url('data:image/svg+xml; utf8, <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" /></svg>');
        width: 1rem;
        height: 1rem;
    }
</style>