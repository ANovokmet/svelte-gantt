{
  "version": 3,
  "file": "svelteGanttTable.css",
  "sources": [
    "..\\src\\modules\\table\\Table.html",
    "..\\src\\modules\\table\\RowHeader.html"
  ],
  "sourcesContent": [
    "<div class=\"table-container\" style=\"width:{$tableWidth}px;\">\r\n    <div class=\"table-header-container\" style=\"width:{scrollWidth}px\" ref:sideHeaderContainer>\r\n        {#each $tableHeaders as header}\r\n            <div class=\"row-header-cell\" style=\"width:{header.width}px\">\r\n                {header.title}\r\n            </div>\r\n        {/each}\r\n    </div>\r\n\r\n    <div class=\"table-scroll-container\" style=\"height:{height}px;\" ref:scrollable>\r\n        <div class=\"table-row-container\" style=\"padding-top:{$paddingTop}px;padding-bottom:{$paddingBottom}px;height:{$rowContainerHeight}px;width:{scrollWidth}px\"> \r\n            {#each visibleRows as row (row.model.id)}\r\n                <RowHeader\r\n                    row={row}\r\n                    headers={$tableHeaders}/>\r\n            {/each}\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .table-container {\r\n        height:100%;\r\n        float: left;\r\n        position: relative;\r\n    }\r\n\r\n    .table-header-container {\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .table-row-container {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .table-scroll-container {\r\n        width: 100%;\r\n        overflow-y: hidden;\r\n    }\r\n</style>\r\n<script>\r\n    import RowHeader from './RowHeader.html';\r\n\r\n    export default {\r\n        setup(component) {\r\n            component.defaults = {\r\n                // list of columns used in the table\r\n                // title: label to display in the header\r\n                // property: property of row to display in the cell\r\n                // width: width of column\r\n                tableHeaders: [{title: 'Name', property: 'label', width: 100}],\r\n                // total width of the table, if width is smaller than sum of column widths, a scrollbar shows\r\n                tableWidth: 100\r\n            }\r\n\r\n            component.bindToGantt = function (params) {\r\n                params.ganttTableModules.push(component);\r\n                Object.assign(params.defaults, component.defaults);\r\n            }\r\n        },\r\n        components: { RowHeader },\r\n        oncreate(){\r\n            this.fire('init', {module: this});\r\n        },\r\n        methods: {\r\n            initModule (options) {\r\n                this.set(options);\r\n                const {_gantt} = this.get();\r\n                const {scrollables} = _gantt.get();\r\n                scrollables.push({node: this.refs.scrollable});\r\n            },\r\n            onGanttCreated() {\r\n                const {_gantt} = this.get();\r\n\r\n                const height = _gantt.refs.sideContainer.clientHeight;\r\n                this.refs.sideHeaderContainer.style.height = height + 'px';\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                visibleRows: null\r\n            }\r\n        },\r\n        computed: {\r\n            scrollWidth: ({$tableHeaders}) => {\r\n                let sum = 0;\r\n                $tableHeaders.forEach(header => {\r\n                    sum += header.width;\r\n                });\r\n                return sum;\r\n            },\r\n            height: ({$height}) => $height - 17\r\n        }\r\n    }\r\n</script>",
    "<div class=\"row-header-row\" style=\"height:{$rowHeight}px\">\r\n    {#each headers as header}\r\n        <div class=\"row-header-cell\" style=\"width:{header.width}px\">\r\n            {#if row.model.headerHtml}\r\n                {@html row.model.headerHtml}\r\n            {:else}\r\n                {row.model[header.property]}\r\n            {/if}\r\n        </div>\r\n    {/each}\r\n</div>\r\n<style>\r\n    .row-header-row {\r\n        position: relative;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    :global(.row-header-cell) {\r\n        display: inline-block;  \r\n        height: 100%;\r\n        box-sizing: border-box;\r\n    }\r\n</style>\r\n<script>\r\n    export default {\r\n        oncreate(){\r\n            \r\n        },\r\n        helpers: {\r\n            getValue(header) {\r\n\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                label: '',\r\n                row: null,\r\n                headers: null\r\n            }\r\n        }\r\n    }\r\n</script>"
  ],
  "names": [],
  "mappings": "AAqBI,gBAAgB,eAAC,CAAC,AACd,OAAO,IAAI,CACX,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,AACtB,CAAC,AAED,uBAAuB,eAAC,CAAC,AACrB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,UAAU,AAC1B,CAAC,AAED,oBAAoB,eAAC,CAAC,AAClB,UAAU,CAAE,UAAU,AAC1B,CAAC,AAED,uBAAuB,eAAC,CAAC,AACrB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,AACtB,CAAC;AC3BD,eAAe,eAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,UAAU,AAC1B,CAAC,AAEO,gBAAgB,AAAE,CAAC,AACvB,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UAAU,AAC1B,CAAC"
}