{
  "version": 3,
  "file": "svelteGanttTable.css",
  "sources": [
    "..\\..\\src\\modules\\table\\Table.html",
    "..\\..\\src\\modules\\table\\TableRow.html"
  ],
  "sourcesContent": [
    "<div class=\"sg-table sg-view\" style=\"width:{tableWidth}px;\">\r\n    <div class=\"sg-table-header\" ref:sideHeaderContainer style=\"height:{$headerHeight}px\"> \r\n        {#each $tableHeaders as header}\r\n            <div class=\"sg-table-header-cell sg-table-cell\"> <!--style=\"width:{header.width}px\"-->\r\n                {header.title}\r\n            </div>\r\n        {/each}\r\n    </div>\r\n\r\n    <div class=\"sg-table-body\" class:bottom-scrollbar-visible=\"bottomScrollbarVisible\">\r\n        <div class=\"sg-table-scroller\" ref:scrollable>\r\n            <div class=\"sg-table-rows\" style=\"padding-top:{paddingTop}px;padding-bottom:{paddingBottom}px;height:{rowContainerHeight}px;\"> \r\n                {#each visibleRows as row (row.model.id)}\r\n                    <TableRow\r\n                        row={row}\r\n                        headers={$tableHeaders}/>\r\n                {/each}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n\r\n    /* This class should take into account varying widths of the scroll bar */\r\n    .bottom-scrollbar-visible {\r\n        padding-bottom: 17px;\r\n    }\r\n\r\n    .sg-table {\r\n        overflow-x: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .sg-table-scroller {\r\n        width: 100%;\r\n        border-bottom: 1px solid #efefef; \r\n        overflow: hidden;\r\n    }\r\n\r\n    .sg-table-header {\r\n        display: flex;\r\n        align-items: stretch;\r\n        width: 100%;\r\n    }\r\n\r\n    .sg-table-rows {\r\n        \r\n    }\r\n\r\n    .sg-table-body {\r\n        display: flex;\r\n        flex: 1 1 0;\r\n        width: 100%;\r\n        overflow-y: hidden;\r\n    }\r\n\r\n    .sg-table-header-cell {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n    }\r\n\r\n    :global(.sg-table-cell){\r\n        flex: 1;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        \r\n        display: flex;\r\n        align-items: center;\r\n\r\n        padding: 0 .5em;\r\n        height: 100%;\r\n    }\r\n\r\n    :global(.sg-table-cell:last-child) {\r\n        flex-grow: 1;\r\n    }\r\n</style>\r\n<script>\r\n    import TableRow from './TableRow.html';\r\n    import { H_SCROLLBAR_WIDTH } from 'src/core/constants';\r\n\r\n    export default {\r\n        setup(component) {\r\n            component.defaults = {\r\n                // list of columns used in the table\r\n                // title: label to display in the header\r\n                // property: property of row to display in the cell\r\n                // width: width of column\r\n                tableHeaders: [{title: 'Name', property: 'label', width: 100}],\r\n                // total width of the table, if width is smaller than sum of column widths, a scrollbar shows\r\n                tableWidth: 100\r\n            }\r\n\r\n            component.bindToGantt = function (params) {\r\n                params.ganttTableModules.push(component);\r\n                Object.assign(params.defaults, component.defaults);\r\n            }\r\n        },\r\n        components: { TableRow },\r\n        oncreate(){\r\n            this.fire('init', {module: this});\r\n            \r\n        },\r\n        methods: {\r\n            initModule (options) {\r\n                this.set(options);\r\n                const {_gantt} = this.get();\r\n                const {scrollables} = _gantt.get();\r\n                scrollables.push({node: this.refs.scrollable});\r\n            },\r\n            onGanttCreated() {\r\n                const {_gantt} = this.get();\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                visibleRows: null\r\n            }\r\n        },\r\n        computed: {\r\n            scrollWidth: ({$tableHeaders}) => {\r\n                let sum = 0;\r\n                $tableHeaders.forEach(header => {\r\n                    sum += header.width;\r\n                });\r\n                return sum;\r\n            },\r\n            bottomScrollbarVisible: ({$visibleWidth, $width}) => $width > $visibleWidth\r\n        }\r\n    }\r\n</script>",
    "<div class=\"sg-table-row\" style=\"height:{$rowHeight}px\">\r\n    {#each headers as header}\r\n        <div class=\"sg-table-body-cell sg-table-cell\" > <!--style=\"width:{header.width}px\"-->\r\n            {#if row.model.headerHtml}\r\n                {@html row.model.headerHtml}\r\n            {:elseif header.renderer}\r\n                {@html header.renderer(row)}\r\n            {:elseif header.type === 'resourceInfo'}\r\n                <img class=\"sg-resource-image\" src=\"{row.model.imageSrc}\" alt=\"\"/>\r\n                <div class=\"sg-resource-title\">\r\n                    {row.model[header.property]}\r\n                </div>\r\n            {:else}\r\n                {row.model[header.property]}\r\n            {/if}\r\n        </div>\r\n    {/each}\r\n</div>\r\n<style>\r\n    .sg-table-row {\r\n        display: flex;\r\n        align-items: stretch;\r\n\r\n        position: relative;\r\n\r\n        font-weight: 400;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .sg-table-cell {\r\n    }\r\n\r\n    .sg-resource-image {\r\n        width: 2.4em;\r\n        height: 2.4em;\r\n        border-radius: 50%;\r\n        margin-right: .6em;\r\n\r\n        background: #047c69;\r\n    }\r\n\r\n    .sg-resource-info {\r\n        flex: 1;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n    }\r\n</style>\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                row: null,\r\n                headers: null\r\n            }\r\n        }\r\n    }\r\n</script>"
  ],
  "names": [],
  "mappings": "AAyBI,yBAAyB,cAAC,CAAC,AACvB,cAAc,CAAE,IAAI,AACxB,CAAC,AAED,SAAS,cAAC,CAAC,AACP,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AAC1B,CAAC,AAED,kBAAkB,cAAC,CAAC,AAChB,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,QAAQ,CAAE,MAAM,AACpB,CAAC,AAED,gBAAgB,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,OAAO,CACpB,KAAK,CAAE,IAAI,AACf,CAAC,AAED,cAAc,cAAC,CAAC,AAEhB,CAAC,AAED,cAAc,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CACX,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,AACtB,CAAC,AAED,qBAAqB,cAAC,CAAC,AACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AACpB,CAAC,AAEO,cAAc,AAAC,CAAC,AACpB,IAAI,CAAE,CAAC,CACP,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAEhB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CAEnB,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,MAAM,CAAE,IAAI,AAChB,CAAC,AAEO,yBAAyB,AAAE,CAAC,AAChC,SAAS,CAAE,CAAC,AAChB,CAAC;AC1DD,aAAa,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,OAAO,CAEpB,QAAQ,CAAE,QAAQ,CAElB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,AACnB,CAAC,AAED,cAAc,eAAC,CAAC,AAChB,CAAC,AAED,kBAAkB,eAAC,CAAC,AAChB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,IAAI,CAElB,UAAU,CAAE,OAAO,AACvB,CAAC"
}